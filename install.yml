---

# yamllint disable rule:line-length

- defaults:
    link:
      relative: true
      canonicalize-path: false

- shell:
    - 'mkdir -p ~/.config/byobu ~/.local/share/zsh ~/.local/usr'
    - 'if command -v make; then make --directory doublecmd install; fi'
    - 'mkdir -p ~/.gnupg && chmod 0700 ~/.gnupg'
    - 'mkdir -p ~/.ssh/multiplex && chmod 0700 ~/.ssh'
    - 'cd ~/.ssh && for dir in ./*; do if [ -d "$dir" ] && [ "$dir" != "./multiplex" ]; then mkdir -p "$dir/known_hosts.d"; fi ; done'
    - 'mkdir -p ~/.asdf-writable/shims && ln -sf node ~/.asdf-writable/shims/nodejs'
    - 'mkdir -p ~/.asdf-writable/installs'
    - 'mkdir -p ~/.asdf-writable/keyrings'
    - 'mkdir -p ~/.asdf-writable/plugins'
    - 'if [ "$(find "$PWD/asdf" -maxdepth 1 -type f|wc -l)" != "0" ]; then ln -sf "$PWD/asdf"/* ~/.asdf-writable; fi'

- link:

    # ~/.ackrc:
    #     create: true
    #     relink: true
    #     path: ackrc

    '~/.config/autokey/data/Emitting keystrokes':
      create: true
      relink: true
      path: 'autokey/Emitting keystrokes'

    ~/.bashrc:
      force: true
      create: true
      relink: true
      path: bashrc

    ~/.bash_logout:
      force: true
      create: true
      relink: true
      path: bash_logout

    ~/.bash_profile:
      create: true
      relink: true
      path: bash_profile

    ## Done by shell command above.
    # ~/.asdf:
    #   create: true
    #   relink: true
    #   path: asdf

    # ~/.conkyrc:
    #     create: true
    #     relink: true
    #     path: conkyrc

    ~/.sandboxes/firejail-scripts:
      create: true
      relink: true
      path: firejail-scripts

    ~/.sandboxes/bin/config_common.sh:
      create: true
      relink: true
      path: firejail-scripts/config_common.sh

    ~/.sandboxes/bin/config_handle_desktop_entries:
      create: true
      relink: true
      path: firejail-scripts/config_handle_desktop_entries

    ~/.ssh/config_ypid_defaults:
      create: true
      relink: true
      path: ssh/config_ypid_defaults

    ~/.ssh/assh.yml:
      create: true
      relink: true
      path: ssh/assh.yml

    ~/.sshrc:
      create: true
      relink: true
      path: ssh/sshrc

    ~/.config/git/config:
      create: true
      relink: true
      path: gitconfig

    ~/.config/git/ignore:
      create: true
      relink: true
      path: gitignore_global

    ~/.yamllint:
      create: true
      relink: true
      path: yamllint

    ~/.goaccessrc:
      create: true
      relink: true
      path: goaccessrc

    ~/.gnupg/gpg.conf:
      create: true
      relink: true
      path: gnupg/gpg.conf

    ~/.gnupg/sks-keyservers.netCA.pem:
      create: true
      relink: true
      path: gnupg/sks-keyservers.netCA.pem

    ~/.hgrc:
      create: true
      relink: true
      path: hgrc

    ~/.config/htop/htoprc:
      create: true
      relink: true
      path: htoprc

    ~/.vim:
      create: true
      relink: true
      path: nvim

    ~/.config/nvim:
      create: true
      relink: true
      path: nvim

    ~/.vimrc:
      create: true
      relink: true
      path: nvim/init.vim

    ~/.vimrc.min:
      create: true
      relink: true
      path: nvim/init_min.vim

    ~/.config/readline/inputrc:
      create: true
      relink: true
      path: inputrc

    ~/.latexmkrc:
      create: true
      relink: true
      path: latexmkrc

    ~/.perlcriticrc:
      create: true
      relink: true
      path: perlcriticrc

    ~/.perltidyrc:
      create: true
      relink: true
      path: perltidyrc

    ~/.pystartup:
      create: true
      relink: true
      path: pystartup

    ~/.config/flake8:
      create: true
      relink: true
      path: flake8

    ~/.rhashrc:
      create: true
      relink: true
      path: rhashrc

    ~/.config/shell/global:
      create: true
      relink: true
      path: shell_global

    ~/.config/shell.d/10_functions:
      create: true
      relink: true
      path: shell_functions

    ~/.config/shell.d/20_extend_PATH:
      create: true
      relink: true
      path: shell_extend_PATH

    ~/.config/shell.d/50_public:
      create: true
      relink: true
      path: shell_public

    ~/.local/share/scripts/ypid-scripts-common:
      create: true
      relink: true
      path: scripts

    ~/.config/tint2/tint2rc:
      create: true
      relink: true
      path: tint2rc

    ~/.tmux.conf:
      create: true
      relink: true
      path: tmux.conf

    ~/.local/share/tmux:
      create: true
      relink: true
      path: tmux

    # ~/.xbindkeysrc:
    #     create: true
    #     relink: true
    #     path: xbindkeysrc

    ~/.zshrc:
      create: true
      relink: true
      path: zshrc

    ~/.config/oh-my-zsh:
      create: true
      relink: true
      path: oh-my-zsh

    ~/.config/oh-my-zsh-custom:
      create: true
      relink: true
      path: oh-my-zsh-custom

    ~/.config/synapse/config.json:
      create: true
      relink: true
      path: config/synapse/config.json

    ~/.config/dconf/dconf_backup:
      create: true
      relink: true
      path: scripts/dconf-backup/dconf_backup

    ~/.config/dconf/dconf_backup_all:
      create: true
      relink: true
      path: scripts/dconf-backup/dconf_backup_all

    ~/.config/dconf/dconf_restore:
      create: true
      relink: true
      path: scripts/dconf-backup/dconf_restore

    ~/.config/dconf/dconf_restore_all:
      create: true
      relink: true
      path: scripts/dconf-backup/dconf_restore_all

    ~/.config/dconf/README.md:
      create: true
      relink: true
      path: scripts/dconf-backup/README.md

    ~/.config/dconf/Makefile:
      create: true
      relink: true
      force: true
      path: scripts/dconf-backup/Makefile

    ~/.config/neo_layout_viewer.conf:
      create: true
      relink: true
      path: neo_layout_viewer.conf

    ~/.config/ranger/rc.conf:
      create: true
      relink: true
      path: ranger.rc.conf

    ~/.config/ranger/commands.py:
      create: true
      relink: true
      path: submodules/dotfiles-fiatjaf/ranger-commands.py

    ~/.config/ranger/plugins/linemode_gitannex.py:
      create: true
      relink: true
      path: submodules/dotfiles-fiatjaf/ranger-plugins/linemode_gitannex.py

    # Does overwrite symbolic links.
    # ~/.config/doublecmd/shortcuts.scf:
    #     create: true
    #     path: doublecmd/shortcuts.scf

    ~/.config/doublecmd/scripts:
        create: true
        relink: true
        path: doublecmd/scripts

    ~/.config/mr/mrconfig:
      create: true
      relink: true
      path: myrepos/mrconfig

    ~/.config/mr/library-loaders:
      create: true
      relink: true
      path: myrepos/mr-config-adam/library-loaders

    ~/.config/mr/lib.d/git:
      create: true
      relink: true
      path: myrepos/mr-config-adam/sh.d/git

    ~/.config/mr/lib.d/git-remotes:
      create: true
      relink: true
      path: myrepos/mr-config-adam/sh.d/git-remotes

    ~/.local/share/scripts/git-config-adam/git-url-rewrite:
      create: true
      relink: true
      path: submodules/git-config-adam/bin/git-url-rewrite

    # https://git-annex.branchable.com/tips/finding_duplicate_files/
    ~/.local/share/scripts/git-config-adam/git-annex-finddups:
      create: true
      relink: true
      path: submodules/git-config-adam/bin/git-annex-finddups

- shell:
    - 'rsync --recursive --ignore-existing config/ ~/.config'
    - 'rsync --recursive --ignore-existing local/ ~/.local'
    - 'rsync --ignore-existing ssh/config ~/.ssh'
    - 'rm -f ~/.config/shell.d/shell_extend_PATH ~/.config/shell.d/public'
    - 'rm -f ~/.asdf'
    ## Needs to be run with X11 $DISPLAY set:
    - 'if command -v dconf && [ ! -e ~/.config/dconf/user ]; then make --directory ~/.config/dconf restore || true; fi'
    - 'if [ ! -e "$HOME/.mrconfig" ]; then cp myrepos/mrconfig_home_template "$HOME/.mrconfig"; fi'

- clean:
    - '~'
    - '~/.config/git'
    - '~/.config/shell.d'
