"" This config file contains common configuration that I want to use in my
"" normal use of Vim as well as in Vim as pager.

set nocompatible               " be iMproved
filetype off                   " required!
let mapleader = ','


"" let Vundle manage Vundle
"" git://github.com/gmarik/vundle.git
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
let g:vundle_default_git_proto = 'git'

"" required!
Bundle 'gmarik/vundle'

Bundle 'dahu/LearnVim'
Bundle 'bronson/vim-visual-star-search'

"" easymotion
Bundle 'Lokaltog/vim-easymotion'
let g:EasyMotion_leader_key = '<Leader>j'

"" Needs to be before syntax on …
Bundle 'SirVer/ultisnips'

"" translate
"" you can print the last translated word with ""p
" Bundle 'mattn/webapi-vim'
" let g:trans_has_python = 0
" Bundle 'Rykka/trans.vim'
" let g:trans_default_lang = 'de'
" let g:trans_map_trans = '<Leader>tr'
Bundle 'lookup.vim'
" Bundle 'ypid/lookup.vim'
" let g:lookup_dict_para = []
" nmap <Leader>tr :call LookupCurWord()<CR>'
" vmap <Leader>tv :call LookupVisual()<CR>'
nmap <Leader>tr :Lookup<CR>
vmap <Leader>tv :call LookupVisual()<CR>
inoremap <Leader>tr <ESC>:Lookup<CR>a

"" Mappings {{{1
set pastetoggle=<F2>

"" map: nvo
"" map!: ic

"" I use this so that Ctrl-c also works in the command-line window like Escape.
"" Does not work
" map! <c-c> <ESC>

"" colorscheme delek
"" colorscheme default
" set listchars=tab:-
set listchars=tab:→\ ,eol:$,trail:.,extends:>,precedes:<,nbsp:_

"" Behavior {{{1
set nofoldenable
"" Showing line numbers and length
set number  " show line numbers
" set relativenumber
" set showbreak=…
set tw=79   " width of document (used by gd)
"set nowrap  " don't automatically wrap on load
set fo-=t   " don't automatically wrap text when typing
set autochdir

"" Filetype detact
map <Leader>fd :filetype detect<CR>
inoremap <Leader>fd <ESC>:filetype detect<CR>a

"" erase bad whitespace from vim-bad-whitespace
map <Leader>fc :EraseBadWhitespace<CR>
inoremap <Leader>fc <ESC>:EraseBadWhitespace<<CR>a

"" Toggle highlight search
map <Leader>b :nohl<CR>
inoremap <Leader>b <ESC>:nohl<CR>a

"" <Leader>a does interfere <c-a>
map <Leader>p :set number!<CR>
inoremap <Leader>p <ESC>:set number!<CR>a

"" Bind set list
map <Leader>l :set list!<CR>
inoremap <Leader>l <ESC>:set list!<CR>a
" map <c-i> :set list!<CR>
" inoremap <c-i> <ESC>:set list!<CR>a

"" Insert current full path of the file
inoremap <Leader>fp <ESC>:put =expand('%:p')<CR>kJA
"" Insert current file name
inoremap <Leader>fn <ESC>:put =expand('%:t:r')<CR>kJA

"" Spellcheck
set spelllang=en_us
hi clear SpellBad
hi SpellBad cterm=underline
map <Leader>c :set spell!<CR>
inoremap <Leader>c <ESC>:set spell!<CR>a

"" Save and go to normal mode
map <Leader>s :update<CR>
inoremap <Leader>s <ESC>:update<CR>l

"" Save and exit
map <Leader>x :x<CR>
inoremap <Leader>x <ESC>:x<CR>

"" Quick quit command
nnoremap <Leader>e :quit<CR>
"" Quit current window
" nnoremap <Leader>E :qa!<CR>
"" Quit all windows

"" ``<C>`` stands for ``CTRL`` and therefore ``<C-n>`` stands for ``CTRL+n``
"" bind Ctrl+<movement> keys to move around the windows, instead of using Ctrl+w + <movement>
"" Every unnecessary keystroke that can be saved is good for your health :)
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

"" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>

"" set the executable bit
map <Leader>y :w!<CR>:!chmod +x %<CR>:q<CR>
inoremap <Leader>y <ESC>:w!<CR>:!chmod +x %<CR>:q<CR>a

"" map sort function to a key
"" vnoremap <Leader> :sort<CR>

"" easier moving of code blocks
vnoremap < <gv
vnoremap > >gv

"" easier formatting of paragraphs
" vmap Q gq
" nmap Q gqap

"" Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

if filereadable($HOME.'/.vimrc_private')
    source ~/.vimrc_private
endif
