# vim: set ft=sh :

[DEFAULT]
git_annex_remotes =
    for remote in $(git remote)
    do
        git remote rm "$remote"
    done
    repo_id="${MR_REPO#/media/*/}"
    find /media -maxdepth 5 -type d -name '.git' -regextype posix-extended -regex ".*$repo_id/.git$" | while read -r git_path
    do
        annex_path="$(dirname "$git_path")"
        echo $annex_path
        if [ -d "${git_path}/annex" ] && [ "$annex_path" != "$MR_REPO" ]
        then
            disk_name="${annex_path#/media/}"
            disk_name="${disk_name%%/*}"
            for uuid in $(git annex info --fast --json | jq "[ .[\"trusted repositories\"][], .[\"semitrusted repositories\"][], .[\"untrusted repositories\"][] ][] | select(contains({description: \"$disk_name\"})) | .[\"uuid\"]" --raw-output)
            do
                if ! git annex group "$uuid" | grep -q "offlinebackup"
                then
                    git remote add "$disk_name" "$annex_path"
                fi
            done
        fi
    done

include =
    find /media -maxdepth 5 -type d -name '.git' | while read -r git_path
    do
        annex_path="$(dirname "$git_path")"
        if [ -d "${git_path}/annex" ]
        then
            echo "[$annex_path]"
            echo "[DEFAULT]"
        fi
    done
